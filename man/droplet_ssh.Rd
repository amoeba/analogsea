% Generated by roxygen2 (4.0.2): do not edit by hand
\name{droplet_ssh}
\alias{droplet_download}
\alias{droplet_reset_host}
\alias{droplet_ssh}
\alias{droplet_upload}
\title{Remotely execute ssh code, upload & download files.}
\usage{
droplet_ssh(droplet, ..., user = "root", verbose = FALSE)

droplet_upload(droplet, local, remote, user = "root", verbose = FALSE)

droplet_download(droplet, remote, local, user = "root", verbose = FALSE)

droplet_reset_host(droplet)
}
\arguments{
\item{droplet}{A droplet, or something that can be coerced to a droplet by
\code{\link{as.droplet}}.}

\item{...}{Shell command to run}

\item{user}{User name. Defaults to "root".}

\item{verbose}{If TRUE, will print command before executing it.}

\item{local,remote}{Local and remote paths.}
}
\value{
On success, the droplet (invisibly). On failure, throws an
  error.
}
\description{
Assumes that you have ssh & scp installed, and password-less login set up
on the droplet.  Use \code{droplet_reset_host} to reset your host file
if you get complaints from ssh - this usually occurs when you have a new
droplet on a previously used ip address.
}
\examples{
\dontrun{
d <- droplet_new() \%>\% droplet_wait()

# Upgrade system packages
d \%>\%
  droplet_ssh("apt-get update") \%>\%
  droplet_ssh("sudo apt-get upgrade -y --force-yes") \%>\%
  droplet_ssh("apt-get autoremove -y")

# Install R
d \%>\%
  droplet_ssh("apt-get install r-base-core r-base-dev --yes --force-yes")

# Upload and download files -------------------------------------------------

tmp <- tempfile()
saveRDS(mtcars, tmp)
d \%>\% droplet_upload(tmp, "mtcars.rds")

tmp2 <- tempfile()
d \%>\% droplet_download("mtcars.rds", tmp2)
mtcars2 <- readRDS(tmp2)

stopifnot(all.equal(mtcars, mtcars2))
}
}

